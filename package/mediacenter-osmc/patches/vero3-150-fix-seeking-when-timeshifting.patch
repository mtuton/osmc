From e85feee7fcda217a0e6932e9569773d7cf3a11e9 Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Thu, 16 May 2019 17:22:58 +0100
Subject: [PATCH] Fix seeking when timeshifting (from LE)

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxClient.cpp |  1 +
 xbmc/cores/VideoPlayer/VideoPlayer.cpp                | 17 ++++++++++-------
 2 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxClient.cpp b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxClient.cpp
index 48e8275..df66742 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxClient.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxClient.cpp
@@ -616,6 +616,7 @@ bool CDVDDemuxClient::SeekTime(double timems, bool backwards, double *startpts)
 {
   if (m_IDemux)
   {
+    CLog::Log(LOGDEBUG, LOGVIDEO, "CDVDDemuxClient::SeekTime: %0.3f", timems / 1000.0);
     m_displayTime = 0;
     m_dtsAtDisplayTime = DVD_NOPTS_VALUE;
     return m_IDemux->SeekTime(timems, backwards, startpts);
diff --git a/xbmc/cores/VideoPlayer/VideoPlayer.cpp b/xbmc/cores/VideoPlayer/VideoPlayer.cpp
index 43e88cc..ed197fe 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayer.cpp
+++ b/xbmc/cores/VideoPlayer/VideoPlayer.cpp
@@ -2017,6 +2017,7 @@ void CVideoPlayer::HandlePlaySpeed()
     else if (m_CurrentVideo.syncState == IDVDStreamPlayer::SYNC_WAITSYNC &&
              m_CurrentVideo.avsync == CCurrentStream::AV_SYNC_CONT)
     {
+      CLog::Log(LOGDEBUG, LOGVIDEO, "VideoPlayer::Sync - Video - Waiting, clock: %0.3f", m_clock.GetClock());
       m_CurrentVideo.syncState = IDVDStreamPlayer::SYNC_INSYNC;
       m_CurrentVideo.avsync = CCurrentStream::AV_SYNC_NONE;
       m_VideoPlayerVideo->SendMessage(new CDVDMsgDouble(CDVDMsg::GENERAL_RESYNC, m_clock.GetClock()), 1);
@@ -2173,17 +2174,19 @@ void CVideoPlayer::HandlePlaySpeed()
             errorwin = 8;
           error /= errorwin;
         }
+        CLog::Log(LOGDEBUG, LOGVIDEO, "CVideoPlayer::Process - ffd/rwd: lastpts:%0.3f clock:%0.3f lastseekpts:%0.3f speed:%d error:%0.3f",
+          m_SpeedState.lastpts / 1000000.0, m_clock.GetClock() / 1000000.0, m_SpeedState.lastseekpts / 1000000.0, (int)m_playSpeed, error / 1000000.0);
 
-        if (error > DVD_MSEC_TO_TIME(1000))
+        if (std::abs(error) > DVD_MSEC_TO_TIME(1000))
         {
           error  = (m_clock.GetClock() - m_SpeedState.lastseekpts) / 1000;
 
           if (std::abs(error) > 1000 || (m_VideoPlayerVideo->IsRewindStalled() && std::abs(error) > 100))
           {
-            CLog::Log(LOGDEBUG, "CVideoPlayer::Process - Seeking to catch up, error was: %f", error);
             m_SpeedState.lastseekpts = m_clock.GetClock();
             int direction = (m_playSpeed > 0) ? 1 : -1;
             double iTime = (m_clock.GetClock() + m_State.time_offset + 1000000.0 * direction) / 1000;
+            CLog::Log(LOGDEBUG, LOGVIDEO, "CVideoPlayer::Process - Seeking to catch up, error was: %0.3f time:%0.3f", error / 1000.0, iTime/1000.0);
             CDVDMsgPlayerSeek::CMode mode;
             mode.time = iTime;
             mode.backward = (m_playSpeed < 0);
@@ -2673,10 +2676,9 @@ void CVideoPlayer::HandleMessages()
       if (m_pInputStream->GetIPosTime() == nullptr)
         time -= m_State.time_offset/1000l;
 
-      CLog::Log(LOGDEBUG, "demuxer seek to: %f", time);
+      CLog::Log(LOGDEBUG, LOGVIDEO, "CVideoPlayer::HandleMessages: demuxer seek to: %0.3f", time / 1000.0);
       if (m_pDemuxer && m_pDemuxer->SeekTime(time, msg.GetBackward(), &start))
       {
-        CLog::Log(LOGDEBUG, "demuxer seek to: %f, success", time);
         if(m_pSubtitleDemuxer)
         {
           if(!m_pSubtitleDemuxer->SeekTime(time, msg.GetBackward()))
@@ -2690,6 +2692,7 @@ void CVideoPlayer::HandleMessages()
         m_State.lastSeek = m_clock.GetAbsoluteClock();
 
         FlushBuffers(start, msg.GetAccurate(), msg.GetSync());
+        CLog::Log(LOGDEBUG, LOGVIDEO, "CVideoPlayer::HandleMessages: flush buffers: dts:%0.3f lastSeek:%0.3f clock:%0.3f", start / 1000000., m_State.lastSeek / 1000.0, m_clock.GetClock() / 1000000.0);
       }
       else if (m_pDemuxer)
       {
@@ -3074,7 +3077,8 @@ void CVideoPlayer::SetCaching(ECacheState state)
   if(m_caching == state)
     return;
 
-  CLog::Log(LOGDEBUG, "CVideoPlayer::SetCaching - caching state %d", state);
+  CLog::Log(LOGDEBUG, LOGVIDEO, "CVideoPlayer::SetCaching - caching state %d clock:%0.3f start pts:%0.3f", 
+    state, m_clock.GetClock() / 1000000.0, m_CurrentVideo.starttime == DVD_NOPTS_VALUE ? -1.0 : m_CurrentVideo.starttime / 1000000.0);
   if (state == CACHESTATE_FULL ||
       state == CACHESTATE_INIT)
   {
@@ -3986,8 +3990,7 @@ void CVideoPlayer::FlushBuffers(double pts, bool accurate, bool sync)
     }
   }
 
-  if(pts != DVD_NOPTS_VALUE && sync)
-    m_clock.Discontinuity(pts);
+  m_CurrentVideo.lastdts = DVD_NOPTS_VALUE;
   UpdatePlayState(0);
 
   if (m_omxplayer_mode)
-- 
2.7.4

